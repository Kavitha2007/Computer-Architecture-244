def restoring_division(dividend, divisor, bits=8, signed=True):
    if signed:
        neg = (dividend < 0) ^ (divisor < 0)
        dividend = abs(dividend)
        divisor = abs(divisor)
    quotient = 0
    remainder = 0
    for i in range(bits-1, -1, -1):
        remainder = (remainder << 1) | ((dividend >> i) & 1)
        quotient <<= 1
        if remainder >= divisor:
            remainder -= divisor
            quotient |= 1
    if signed and neg:
        quotient = -quotient
    return quotient
